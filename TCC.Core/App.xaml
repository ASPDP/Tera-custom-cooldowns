<Application x:Class="TCC.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TCC"
             xmlns:controls="clr-namespace:TCC.Controls"
             xmlns:converters="clr-namespace:TCC.Converters"
             xmlns:chatcontrols="clr-namespace:TCC.Controls.ChatControls"
             xmlns:templateselectors="clr-namespace:TCC.TemplateSelectors"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             Startup="OnStartup">
    <Application.Resources>
        <DropShadowEffect x:Key="dropShadow" BlurRadius="4" ShadowDepth="2" Opacity=".4" />

        <SolidColorBrush x:Key="Colors.App.Main" Color="#ff6822"/>
        <SolidColorBrush x:Key="Colors.App.Green" Color="#00A561"/>

        <SolidColorBrush x:Key="Colors.App.DefaultBackground" Color="#101017" Opacity="1"/>
        <SolidColorBrush x:Key="Colors.App.HP" Color="#f55"/>
        <SolidColorBrush x:Key="Colors.App.MP" Color="#59f"/>
        <SolidColorBrush x:Key="Colors.App.HP.Debuff" Color="#b74be5"/>

        <SolidColorBrush x:Key="Colors.App.Gold" Color="#ffb033"/>
        <SolidColorBrush x:Key="Colors.App.Silver" Color="Silver"/>
        <SolidColorBrush x:Key="Colors.App.Copper" Color="#be6f4d"/>

        <SolidColorBrush x:Key="Colors.ClassWindow.DefensiveStance" Color="#32b3e2" />
        <SolidColorBrush x:Key="Colors.ClassWindow.AssaultStance" Color="#de2c4a" />
        <SolidColorBrush x:Key="Colors.ClassWindow.SniperEye" Color="#38bde5" />

        <SolidColorBrush x:Key="Colors.GroupWindow.Healer" Color="#7cffab" />
        <SolidColorBrush x:Key="Colors.GroupWindow.Dps" Color="#ffaf72" />
        <SolidColorBrush x:Key="Colors.GroupWindow.Tank" Color="#7aceff" />

        <SolidColorBrush x:Key="Colors.BossWindow.Ignidrax" Color="#ff894a"/>
        <SolidColorBrush x:Key="Colors.BossWindow.Terradrax" Color="#ffcb76"/>
        <SolidColorBrush x:Key="Colors.BossWindow.Aquadrax" Color="#dff7ff"/>
        <SolidColorBrush x:Key="Colors.BossWindow.Umbradrax" Color="#aa1e1e"/>

        <system:Double x:Key="MapWidth">800</system:Double>
        <system:Double x:Key="MapHeight">600</system:Double>

        <!--Chat colors-->
        <SolidColorBrush x:Key="Colors.Chat.Say" Color="#fff"/>
        <SolidColorBrush x:Key="Colors.Chat.Party" Color="#0071bb"/>
        <SolidColorBrush x:Key="Colors.Chat.Guild" Color="#40fb40"/>
        <SolidColorBrush x:Key="Colors.Chat.Area" Color="#ba82f2"/>
        <SolidColorBrush x:Key="Colors.Chat.Trade" Color="#c07a81"/>
        <SolidColorBrush x:Key="Colors.Chat.Greet" Color="#999"/>
        <SolidColorBrush x:Key="Colors.Chat.PartyNotice" Color="#8effff"/>
        <SolidColorBrush x:Key="Colors.Chat.RaidNotice" Color="#f28730"/>
        <SolidColorBrush x:Key="Colors.Chat.Emote" Color="#ffb9b9"/>
        <SolidColorBrush x:Key="Colors.Chat.Global" Color="#f0ff89"/>
        <SolidColorBrush x:Key="Colors.Chat.Raid" Color="#fc0"/>
        <SolidColorBrush x:Key="Colors.Chat.Megaphone" Color="#00d8ff"/>
        <SolidColorBrush x:Key="Colors.Chat.GuildAd" Color="#70c401"/>
        <SolidColorBrush x:Key="Colors.Chat.Private" Color="#ff5f38"/>
        <SolidColorBrush x:Key="Colors.Chat.Whisper" Color="#f479f4"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Generic" Color="#c8c8b6"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Notify" Color="#c8c8b6"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Event" Color="#c8c8b6"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Error" Color="#f00"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Group" Color="#d9d9d9"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Deathmatch" Color="#d9d9d9"/>
        <SolidColorBrush x:Key="Colors.Chat.System.ContractAlert" Color="#d9d9d9"/>
        <SolidColorBrush x:Key="Colors.Chat.System.GroupAlert" Color="#d9d9d9"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Loot" Color="#d9d9d9"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Exp" Color="#d9d9d9"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Money" Color="#d9d9d9"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Bargain" Color="#ffbf8f"/>
        
        <FontFamily x:Key="DroidSans">pack://application:,,,/resources/fonts/#droidsans</FontFamily>
        <FontFamily x:Key="OpenSans">pack://application:,,,/resources/fonts/#OpenSans-Regular</FontFamily>
        <FontFamily x:Key="Frutiger">pack://application:,,,/resources/fonts/#Frutiger</FontFamily>
        <FontFamily x:Key="SourceSans">pack://application:,,,/resources/fonts/#SourceSans</FontFamily>

        <Style x:Key="Styles.DefaultBorder" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource Colors.App.DefaultBackground}"/>
            <Setter Property="CornerRadius" Value="0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#202026"/>
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Effect" Value="{StaticResource dropShadow}" />
            <Setter Property="Opacity" Value=".85"/>
        </Style>
        <Style x:Key="Styles.DefaultText" TargetType="TextBlock">
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="Foreground" Value="#bbffffff"/>
            <Setter Property="FontFamily" Value="/TCC;component/resources/#Open Sans"/>
        </Style>

        <!--Converters-->
        <converters:BoolToOpacityConverter x:Key="Converters.BoolToOpacity"/>
        <converters:BoolToOpacityInverseConverter x:Key="Converters.BoolToOpacityInverse"/>
        <converters:BoolToVisibilityConverter x:Key="Converters.BoolToVisibleCollapsed" />
        <converters:BoolToVisibleHidden x:Key="Converters.BoolToVisibleHidden" />
        <converters:RollToStringConverter x:Key="Converters.RollToString"/>
        <converters:WinningToColorConverter x:Key="Converters.WinningToColor"/>
        <converters:IconConverter x:Key="Converters.IconNameToPath"/>
        <converters:ClassImageConverter x:Key="Converters.ClassToImage"/>
        <converters:ChatChannelToColor x:Key="Converters.ChatChannelToColor"/>
        <converters:ChatChannelToName x:Key="Converters.ChatChannelToName"/>
        <converters:MessageTypeToCursor x:Key="Converters.MessageTypeToCursor"/>
        <converters:MentionToColorConverter x:Key="Converters.MentionToColor"/>
        <converters:SentReceivedToAngleConverter x:Key="Converters.WhisperDirectionToAngle"/>
        <converters:HPbarColorConverter x:Key="Converters.DebuffStatusToHpColor"/>
        <converters:ContractedToColWidthConverter x:Key="Converters.MessageContractedToColumnWidth"/>
        <converters:RowsToHeightConverter x:Key="Converters.RowsToHeight"/>
        <converters:BoolToCooldowWindowTemplateConverter x:Key="Converters.BoolToCooldowWindowTemplate"/>

        <!--AbnormalityIndicator resources-->
        <converters:AbnormalityStrokeConverter x:Key="Converters.AbnormalityTypeToStrokeColor"/>
        <converters:DurationLabelConverter x:Key="Converters.DurationToTimeFormat"/>
        <converters:StacksToVisibilityConverter x:Key="Converters.StacksToLabelVisibility"/>
        <converters:DurationToVisibilityConverter x:Key="Converters.DurationToLabelVisibility"/>
        <converters:SizeToStackLabelSizeConverter x:Key="Converters.MainSizeToStackLabelSize"/>
        <converters:SizeToDurationLabelSizeConverter x:Key="Converters.MainSizeToDurationLabelSize"/>
        <converters:SizeToDurationLabelMarginConverter x:Key="Converters.MainSizeToDurationLabelMargin"/>

        <!--BossGage resources-->
        <converters:EntityIdToNameConverter x:Key="Converters.EntityIdToName"/>
        <converters:AggroTypeToFillConverter x:Key="Converters.AggroTypeToFill"/>
        <converters:BossHPbarColorConverter x:Key="Converters.EnrageToHpColor"/>
        <converters:DragonIdToColorConverter x:Key="Converters.DragonIdToColor"/>
        <converters:HHphaseToEnemyWindowTemplate x:Key="Converters.HarrowholdPhaseToLayout"/>

        <!--Party/raid member resources-->
        <converters:LaurelImageConverter x:Key="Converters.LaurelToImage"/>
        <converters:ClassToFillConverter x:Key="Converters.ClassToFill"/>
        <converters:ReadyToOpacityConverter x:Key="readyToOpacityConv"/>
        <converters:ReadyToIconConverter x:Key="Converters.ReadyToIcon"/>
        <converters:ReadyToColorConverter x:Key="Converters.ReadyToColor"/>
        <converters:GroupSizeToTemplateConverter x:Key="Converters.GroupSizeToTemplate"/>
        
        <DataTemplate x:Key="abnorm">
            <controls:AbnormalityIndicator/>
        </DataTemplate>

        <converters:LocationToMapConverter x:Key="Converters.LocationToMap"/>
        <converters:LocationToMarkerPositionConverter x:Key="Converters.LocationToMarkerPosition"/>
        <converters:LocationToStretchConverter x:Key="Converters.LocationToStretch"/>
        <converters:ShieldStatusColorConverter x:Key="Converters.ShieldStatusColor"/>
        <converters:ShieldStatusToVisibilityConverter x:Key="Converters.ShieldStatusToVisibility"/>
        <converters:FactorToAngleConverter x:Key="Converters.FactorToAngle"/>
        
        <!--Scrollbar Thumbs-->
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto"
                                       Height="Auto" Fill="Transparent" />
                            <Border x:Name="Rectangle1" CornerRadius="4" HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch" Width="Auto" Height="Auto" Margin="0"
                                    Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                <Setter TargetName="Rectangle1" Property="Height" Value="6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ScrollBars-->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="#2fff" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="8" />
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>

                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}"
                                           Style="{StaticResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0"
                                                  Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0"
                                                  Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="0" SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121" />
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#11FFFFFF"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#00ACACAC"/>
        <Style x:Key="ChatTabControlStyle" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="headerPanel" Background="#2000" Grid.Column="0" IsItemsHost="true" Margin="0,0,0,0" Grid.Row="0" 
                                      KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" HorizontalAlignment="Stretch"/>
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                    Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" 
                                    KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" 
                                                  Margin="{TemplateBinding Padding}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="SimpleTemplate">
            <controls:OutlinedTextBlock Fill="{Binding Color}"
                                        Text="{Binding Text}" 
                                        Cursor="{Binding Type, Converter={StaticResource Converters.MessageTypeToCursor}}"
                                        Stroke="#9000"
                                        StrokeThickness="3"
                                        FontSize="15"
                                        FontFamily="{StaticResource Frutiger}"
                                        TextWrapping="WrapWithOverflow"
                                        FontWeight="Normal"
                                        Opacity="1"
                                        Width="Auto"
                                        HorizontalAlignment="Stretch"
                                        TextTrimming="None"
                                        Margin="{Binding Spaces}"
                                        >
            </controls:OutlinedTextBlock>
        </DataTemplate>
        <DataTemplate x:Key="MoneyTemplate">
            <controls:MoneyMessagePiece />
        </DataTemplate>
        <templateselectors:MessagePieceDataTemplateSelector x:Key="PieceTemplateSelector"
                                                   SimpleTemplate="{StaticResource SimpleTemplate}"
                                                   MoneyTemplate="{StaticResource MoneyTemplate}"
                                                   QuestTemplate="{StaticResource SimpleTemplate}"
                                                   PointOfInterestTemplate="{StaticResource SimpleTemplate}"
                                                   ItemTemplate="{StaticResource SimpleTemplate}"
                                                   />


        <DataTemplate x:Key="MessageHeaderTemplate">
            <controls:ChatMessageHeader />
        </DataTemplate>
        <DataTemplate x:Key="MessageBodyTemplate">
            <controls:MessagePieceControl  />
        </DataTemplate>
        <DataTemplate x:Key="DefaultBody">
            <ItemsControl ItemsSource="{Binding Pieces}"
                          ItemTemplate="{StaticResource MessageBodyTemplate}" 
                          Background="#0f00"  
                          Margin="3,0,0,0" 
                          VerticalAlignment="Top" >
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel HorizontalAlignment="Stretch"  Width="Auto" Height="Auto" Background="#0f00" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </DataTemplate>
        <DataTemplate x:Key="BrokerOfferBody">
            <chatcontrols:BrokerOfferBody />
        </DataTemplate>
        <DataTemplate x:Key="ApplyBody">
            <chatcontrols:ApplyBody/>
        </DataTemplate>

        <templateselectors:MessageBodyDataTemplateSelector x:Key="BodyTemplateSelector"
                                                           BrokerBody="{StaticResource BrokerOfferBody}"
                                                           DefaultBody="{StaticResource DefaultBody}" 
                                                           ApplyBody="{StaticResource ApplyBody}"/>

        <!--Channel label templates-->
        <DataTemplate x:Key="WhisperChannelLabelTemplate">
            <Grid Height="12" Width="12" VerticalAlignment="Top" UseLayoutRounding="True">
                <Path Data="M12 8V4l8 8-8 8v-4H4V8z" Fill="{Binding Channel, Converter={StaticResource Converters.ChatChannelToColor}}" Opacity=".7" 
                      Stretch="Uniform" VerticalAlignment="Center">
                    <Path.LayoutTransform>
                        <TransformGroup>
                            <ScaleTransform CenterX="1" ScaleX="{Binding Channel, Converter={StaticResource Converters.WhisperDirectionToAngle}}"/>
                        </TransformGroup>
                    </Path.LayoutTransform>
                </Path>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="MegaphoneChannelLabelTemplate">
            <Grid Height="12" Width="12" VerticalAlignment="Top" UseLayoutRounding="True">
                <Path Data="M81.114,30.146C73.196,11.725,60.456-2.306,54.009,0.316C43.062,4.765,60.53,26.133,6.774,47.984
		                                c-4.643,1.887-5.82,9.441-3.877,13.957c1.939,4.515,8.291,9.01,12.936,7.123c0.803-0.326,3.754-1.275,3.754-1.275
		                                c3.316,4.45,6.787,1.811,8.018,4.639c1.479,3.398,4.697,10.785,5.789,13.298c1.096,2.511,3.576,4.837,5.377,4.153
		                                c1.795-0.684,7.91-3.011,10.25-3.901c2.338-0.89,2.896-2.974,2.182-4.619c-0.771-1.772-3.932-2.292-4.832-4.36
		                                c-0.902-2.068-3.848-8.696-4.695-10.785c-1.152-2.841,1.295-5.152,4.85-5.522c24.467-2.55,29.041,12.561,37.371,9.173
		                                C90.343,67.243,89.03,48.568,81.114,30.146z M78.358,60.03c-1.432,0.582-11.061-7.013-17.215-21.334
		                                c-6.152-14.318-5.379-27.408-3.949-27.989c1.43-0.582,10.822,8.58,16.975,22.898C80.321,47.923,79.79,59.448,78.358,60.03z"
                                  Fill="#ff2b2b" Opacity=".7" Stretch="Uniform" VerticalAlignment="Center">
                </Path>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="DefaultChannelLabelTemplate">
            <TextBlock  Foreground="{Binding Channel, Converter={StaticResource Converters.ChatChannelToColor}}" 
                        Opacity=".5" 
                        FontWeight="DemiBold" 
                        FontSize="11"
                        FontFamily="{StaticResource Frutiger}"
                        HorizontalAlignment="Right" 
                        VerticalAlignment="Top"
                        TextAlignment="Center"
                        Visibility="Visible"
                        TextTrimming="CharacterEllipsis"
                        MinWidth="33"
                        Margin="0,-1,0,0"
                        Text="{Binding Channel, Converter={StaticResource Converters.ChatChannelToName}}"
                                />
        </DataTemplate>
        <DataTemplate x:Key="EnchantChannelLabelTemplate">
            <Grid>
                <TextBlock  Foreground="{Binding Channel, Converter={StaticResource Converters.ChatChannelToColor}}" 
                        Opacity=".8" 
                        FontWeight="DemiBold" 
                        FontSize="11"
                        FontFamily="{StaticResource Frutiger}"
                        HorizontalAlignment="Right" 
                        VerticalAlignment="Top"
                        TextAlignment="Center"
                        Visibility="Visible"
                        TextTrimming="CharacterEllipsis"
                        MinWidth="33"
                        Margin="0,-1,0,0"
                        Text="{Binding Channel, Converter={StaticResource Converters.ChatChannelToName}}"
                                />
                <Border Width="Auto"
                     Height="Auto"
                        CornerRadius="5"
                     Margin="4,-2,2,3"
                     Opacity=".3"
                     Background="{Binding Channel, Converter={StaticResource Converters.ChatChannelToColor}}"

                     />
            </Grid>
        </DataTemplate>

        <templateselectors:ChannelLabelDataTemplateSelector x:Key="ChannelLabelTemplateSelector"
                                             NormalChannelDataTemplate="{StaticResource DefaultChannelLabelTemplate}"
                                             WhisperChannelDataTemplate="{StaticResource WhisperChannelLabelTemplate}" 
                                             MegaphoneChannelDataTemplate="{StaticResource MegaphoneChannelLabelTemplate}"
                                             EnchantChannelDataTemplate="{StaticResource EnchantChannelLabelTemplate}"/>
        <!--Author label templates-->
        <DataTemplate x:Key="DefaultAuthorTemplate">
            <controls:OutlinedTextBlock  Margin="3,0,3,0" 
                        Fill="{Binding Channel, Converter={StaticResource Converters.ChatChannelToColor}}" 
                        FontSize="14"
                        HorizontalAlignment="Stretch"
                        TextAlignment="Left"
                        FontWeight="SemiBold"
                        FontFamily="{StaticResource Frutiger}"
                        Width="Auto"
                        MinWidth="0"
                        UseLayoutRounding="True"
                        Opacity=".9"
                        Text="{Binding Author}"
                        Cursor="Hand"
                        TextTrimming="CharacterEllipsis"
                        Stroke="#9000"
                        StrokeThickness="3"                       
                        >

            </controls:OutlinedTextBlock>

        </DataTemplate>
        <DataTemplate x:Key="SystemAuthorTemplate">
            <Ellipse Width="10"
                     Height="10"
                     Margin="2,3,2,4"
                     Opacity=".5"
                     Fill="{Binding Channel, Converter={StaticResource Converters.ChatChannelToColor}}"
                     />
        </DataTemplate>
        <templateselectors:AuthorLabelTemplateSelector x:Key="AuthorTemplateSelector"
                                        DefaultAuthorTemplate="{StaticResource DefaultAuthorTemplate}"
                                        SystemAuthorTemplate="{StaticResource SystemAuthorTemplate}"
                                        />
        <DataTemplate x:Key="LfgTemplate">
            <chatcontrols:LFGcontrol Margin="1"></chatcontrols:LFGcontrol>
        </DataTemplate>

        <!--Boss template-->
        <DataTemplate x:Key="BossDataTemplate">
            <local:BossGage/>
        </DataTemplate>       
        <!--Mob template-->
        <DataTemplate x:Key="MobDataTemplate">
            <controls:SmallMobControl/>
        </DataTemplate>
        <templateselectors:EnemyTemplateSelector x:Key="EnemyTemplateSelector" 
                                                 BossDataTemplate="{StaticResource BossDataTemplate}"
                                                 MobDataTemplate="{StaticResource MobDataTemplate}"/>

        <DataTemplate x:Key="DefaultEnemyWindowLayout">
            <controls:DefaultEnemyWindowLayout/>
        </DataTemplate>
        <DataTemplate x:Key="Phase1EnemyWindowLayout">
            <controls:Phase1BossControl />
        </DataTemplate>
        <DataTemplate x:Key="Phase2EnemyWindowLayout">
            <controls:Phase2BossControl />
        </DataTemplate>
        <DataTemplate x:Key="Phase2BEnemyWindowLayout">
            <controls:Phase2BallistaBossControl />
        </DataTemplate>
        <DataTemplate x:Key="Phase3EnemyWindowLayout">
            <controls:Phase3BossControl />
        </DataTemplate>
        <DataTemplate x:Key="Phase4EnemyWindowLayout">
            <controls:Phase4BossControl />
        </DataTemplate>
        <Style TargetType="Grid" x:Key="Style.DragonSelectionGrid">
            <Setter Property="Opacity" Value=".45"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter Property="Opacity" Value="1" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="DragonIndicator">
            <controls:DragonControl />
        </DataTemplate>

        <DataTemplate x:Key="party">
            <controls:PartyMember />
        </DataTemplate>
        <DataTemplate x:Key="raid" >
            <controls:RaidMember/>
        </DataTemplate>

        <DataTemplate x:Key="FixedCooldownTemplate">
            <controls:FixedSkillContainers/>
        </DataTemplate>
        <DataTemplate x:Key="NormalCooldownTemplate">
            <controls:NormalSkillContainer/>
        </DataTemplate>
    </Application.Resources>
</Application>
