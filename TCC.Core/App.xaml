<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:TCC"
             xmlns:controls="clr-namespace:TCC.Controls"
             xmlns:converters="clr-namespace:TCC.Converters"
             xmlns:chatcontrols="clr-namespace:TCC.Controls.ChatControls"
             xmlns:templateselectors="clr-namespace:TCC.TemplateSelectors"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             xmlns:data="clr-namespace:TCC.Data"
             x:Class="TCC.App"
             Startup="OnStartup">
    <Application.Resources>
        <DropShadowEffect x:Key="dropShadow" BlurRadius="4" ShadowDepth="2" Opacity=".4" />
        <DropShadowEffect x:Key="FadedDropShadow" BlurRadius="3" ShadowDepth="1" Opacity=".3" />

        <SolidColorBrush x:Key="Colors.App.Main" Color="#ff6822"/>
        <SolidColorBrush x:Key="Colors.App.Green" Color="#00A561"/>
        <SolidColorBrush x:Key="Colors.App.LightGreen" Color="#5f7"/>
        <SolidColorBrush x:Key="Colors.App.Twitch" Color="#975eff "/>

        <SolidColorBrush x:Key="Colors.App.DefaultBackground" Color="#101017" Opacity="1"/>
        <SolidColorBrush x:Key="Colors.App.FadedBorderBrush" Color="#aa303035" Opacity="1"/>
        <SolidColorBrush x:Key="Colors.App.FadedBackground" Color="#a0101017" Opacity="1"/>
        <SolidColorBrush x:Key="Colors.App.HP" Color="#ff5555"/>
        <SolidColorBrush x:Key="Colors.App.MP" Color="#4499ff"/>
        <SolidColorBrush x:Key="Colors.App.HP.Debuff" Color="#b74be5"/>

        <SolidColorBrush x:Key="Colors.App.Gold" Color="#ffb033"/>
        <SolidColorBrush x:Key="Colors.App.Silver" Color="Silver"/>
        <SolidColorBrush x:Key="Colors.App.Copper" Color="#be6f4d"/>

        <SolidColorBrush x:Key="Colors.ClassWindow.DefensiveStance" Color="#32b3e2" />
        <SolidColorBrush x:Key="Colors.ClassWindow.AssaultStance" Color="#ff264b" />
        <SolidColorBrush x:Key="Colors.ClassWindow.SniperEye" Color="#38bde5" />

        <SolidColorBrush x:Key="Colors.GroupWindow.Healer" Color="#3bdb83" />
        <SolidColorBrush x:Key="Colors.GroupWindow.Dps" Color="#ff894a" />
        <SolidColorBrush x:Key="Colors.GroupWindow.Tank" Color="#32b3e2" />

        <SolidColorBrush x:Key="Colors.BossWindow.Ignidrax" Color="#ff894a"/>
        <SolidColorBrush x:Key="Colors.BossWindow.Terradrax" Color="#ffcb76"/>
        <SolidColorBrush x:Key="Colors.BossWindow.Aquadrax" Color="#dff7ff"/>
        <SolidColorBrush x:Key="Colors.BossWindow.Umbradrax" Color="#aa1e1e"/>

        <SolidColorBrush x:Key="Colors.App.VanguardBorder" Color="#69975200"/>

        <SolidColorBrush x:Key="Colors.DungeonTier.Solo" Color="#88d9f7"/>
        <SolidColorBrush x:Key="Colors.DungeonTier.2" Color="#3bdb83"/>
        <SolidColorBrush x:Key="Colors.DungeonTier.3" Color="#fcb06f"/>
        <SolidColorBrush x:Key="Colors.DungeonTier.4" Color="#fc946f"/>
        <SolidColorBrush x:Key="Colors.DungeonTier.5" Color="#fc6f6f"/>

        <system:Double x:Key="MapWidth">800</system:Double>
        <system:Double x:Key="MapHeight">600</system:Double>

        <!--Chat colors-->
        <SolidColorBrush x:Key="Colors.Chat.Say" Color="#ffffff"/>
        <SolidColorBrush x:Key="Colors.Chat.Party" Color="#0071bb"/>
        <SolidColorBrush x:Key="Colors.Chat.Guild" Color="#40fb40"/>
        <SolidColorBrush x:Key="Colors.Chat.Area" Color="#ba82f2"/>
        <SolidColorBrush x:Key="Colors.Chat.Trade" Color="#c07a81"/>
        <SolidColorBrush x:Key="Colors.Chat.Greet" Color="#999999"/>
        <SolidColorBrush x:Key="Colors.Chat.PartyNotice" Color="#8effff"/>
        <SolidColorBrush x:Key="Colors.Chat.RaidNotice" Color="#f28730"/>
        <SolidColorBrush x:Key="Colors.Chat.Emote" Color="#ffb9b9"/>
        <SolidColorBrush x:Key="Colors.Chat.Global" Color="#f0ff89"/>
        <SolidColorBrush x:Key="Colors.Chat.Raid" Color="#ffcc00"/>
        <SolidColorBrush x:Key="Colors.Chat.Megaphone" Color="#00d8ff"/>
        <SolidColorBrush x:Key="Colors.Chat.GuildAd" Color="#70c401"/>
        <SolidColorBrush x:Key="Colors.Chat.Private" Color="#ff5f38"/>
        <SolidColorBrush x:Key="Colors.Chat.Proxy" Color="#ffbaf2"/>
        <SolidColorBrush x:Key="Colors.Chat.Whisper" Color="#f479f4"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Generic" Color="#c8c8b6"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Notify" Color="#c8c8b6"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Event" Color="#c8c8b6"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Error" Color="#ff0000"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Group" Color="#d9d9d9"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Deathmatch" Color="#d9d9d9"/>
        <SolidColorBrush x:Key="Colors.Chat.System.ContractAlert" Color="#d9d9d9"/>
        <SolidColorBrush x:Key="Colors.Chat.System.GroupAlert" Color="#d9d9d9"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Loot" Color="#FFC5FBD4"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Exp" Color="#FFA0E5FF"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Money" Color="#FFFFFACC"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Bargain" Color="#ffbf8f"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Quest" Color="#FFFFDDB6"/>
        <SolidColorBrush x:Key="Colors.Chat.System.Friend" Color="#FF84E1FB"/>

        <FontFamily x:Key="DroidSans">pack://application:,,,/resources/fonts/#droidsans</FontFamily>
        <FontFamily x:Key="OpenSans">pack://application:,,,/resources/fonts/#OpenSans-Regular</FontFamily>
        <FontFamily x:Key="Frutiger">pack://application:,,,/resources/fonts/#Frutiger</FontFamily>
        <FontFamily x:Key="SourceSans">pack://application:,,,/resources/fonts/#SourceSans</FontFamily>

        <Style x:Key="Styles.DefaultBorder" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{StaticResource Colors.App.DefaultBackground}"/>
            <Setter Property="CornerRadius" Value="0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#202026"/>
            <Setter Property="Height" Value="Auto" />
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Effect" Value="{StaticResource dropShadow}" />
            <Setter Property="Opacity" Value=".85"/>
        </Style>
        <Style x:Key="Styles.DefaultText" TargetType="{x:Type TextBlock}">
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="Foreground" Value="#bbffffff"/>
            <Setter Property="FontFamily" Value="/TCC;component/resources/#Open Sans"/>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="ButtonMainStyle">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                                                BorderThickness="0"
                                                Padding="0"
                                                BorderBrush="Transparent"
                                                CornerRadius="0"
                                                Background="Transparent">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#2999" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <PathGeometry x:Key="SVG.Close" >M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z</PathGeometry>
        <PathGeometry x:Key="SVG.Star">M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z</PathGeometry>
        <PathGeometry x:Key="SVG.Info">M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z</PathGeometry>
        <PathGeometry x:Key="SVG.Settings">M19.43 12.98c.04-.32.07-.64.07-.98s-.03-.66-.07-.98l2.11-1.65c.19-.15.24-.42.12-.64l-2-3.46c-.12-.22-.39-.3-.61-.22l-2.49 1c-.52-.4-1.08-.73-1.69-.98l-.38-2.65C14.46 2.18 14.25 2 14 2h-4c-.25 0-.46.18-.49.42l-.38 2.65c-.61.25-1.17.59-1.69.98l-2.49-1c-.23-.09-.49 0-.61.22l-2 3.46c-.13.22-.07.49.12.64l2.11 1.65c-.04.32-.07.65-.07.98s.03.66.07.98l-2.11 1.65c-.19.15-.24.42-.12.64l2 3.46c.12.22.39.3.61.22l2.49-1c.52.4 1.08.73 1.69.98l.38 2.65c.03.24.24.42.49.42h4c.25 0 .46-.18.49-.42l.38-2.65c.61-.25 1.17-.59 1.69-.98l2.49 1c.23.09.49 0 .61-.22l2-3.46c.12-.22.07-.49-.12-.64l-2.11-1.65zM12 15.5c-1.93 0-3.5-1.57-3.5-3.5s1.57-3.5 3.5-3.5 3.5 1.57 3.5 3.5-1.57 3.5-3.5 3.5z</PathGeometry>
        <PathGeometry x:Key="SVG.Folder">M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z</PathGeometry>
        <PathGeometry x:Key="SVG.Twitch">m 0,0 -13.652,-13.651 -21.445,0 -11.699,-11.697 0,11.697 -17.548,0 0,56.544 L 0,42.893 0,0 z m -72.146,50.692 -3.899,-15.599 0,-70.19 17.55,0 0,-9.751 9.746,0 9.752,9.751 15.596,0 31.196,31.192 0,54.597 -79.941,0 z</PathGeometry>
        <PathGeometry x:Key="SVG.Weapon">M6.92,5H5L14,14L15,13.06M19.96,19.12L19.12,19.96C18.73,20.35 18.1,20.35 17.71,19.96L14.59,16.84L11.91,19.5L10.5,18.09L11.92,16.67L3,7.75V3H7.75L16.67,11.92L18.09,10.5L19.5,11.91L16.83,14.58L19.95,17.7C20.35,18.1 20.35,18.73 19.96,19.12Z</PathGeometry>
        <PathGeometry x:Key="SVG.Armor">m 131.39439,91.470106 c 9.47364,6.80542 12.93371,7.28461 22.33349,9.222214 2.58633,11.90533 1.24363,8.24386 7.83505,22.25781 0.34094,11.74196 -4.50375,24.81331 -4.50375,24.81331 -2.86911,2.38152 -15.15468,15.74503 -19.76507,42.58244 -6.28096,-1.24608 -11.01341,-3.62773 -22.31891,-1.18914 -11.3055,-2.43859 -16.037943,-0.0569 -22.318906,1.18914 -4.610393,-26.83741 -16.895954,-40.20092 -19.765064,-42.58244 0,0 -4.844692,-13.07135 -4.503751,-24.81331 6.591412,-14.01395 5.248718,-10.35248 7.835048,-22.25781 9.399775,-1.937606 12.859851,-2.416788 22.333493,-9.222207 7.61068,6.423603 11.64516,5.926211 16.41918,6.173073 4.77402,-0.24686 8.80851,0.25053 16.41919,-6.17308 z</PathGeometry>
        <PathGeometry x:Key="SVG.Hands">M123.153 24.602c-11.349.764-48.792 83.005-63.545 132.174-8.046 26.818 2.983 74.734 41.723 106.45 8.813-1.502 16.946-3.047 24.434-4.626-22.473-24.22-39.048-50.488-47.772-82.059l-1.021-3.699 1.963-3.299c26.135-43.925 37.681-68.548 50.85-112.24l3.849-12.773 10.402 8.351c14.624 11.743 23.72 18.084 32.098 21.809-14.428-22.99-31.841-41.36-52.46-50.06a2.164 2.164 0 0 0-.52-.028zm19.791 50.203c-11.724 36.176-24.141 62.49-46.508 100.379 9.004 29.978 25.746 54.616 49.733 78.65 18.744-4.857 32.588-9.929 43.383-14.978 16.875-7.894 26.514-15.73 36.92-23.701-6.532-34.91-18.944-80.14-38.018-118.375-14.754-2.769-27.196-8.373-45.51-21.975zm90.094 158.008c-9.156 7.022-19.796 14.833-35.861 22.347-17.365 8.123-40.947 15.887-76.29 22.793 35.349 28.759 64.905 62.213 112.643 82.157 2.79-15.613 10.509-29.532 20.61-39.782 9.547-9.688 21.609-16.383 34.252-16.82 2.202-5.202 5.378-10.557 10.593-14.93 6.41-5.374 15.626-8.323 26.932-8.156a35.046 35.046 0 0 1 4.807-5.424c-7.384-1.603-16.19-3.168-27.145-5.586zm120.275 50.299c-.04.009-.084.012-.125.021-11.264 3.729-12.514 6.776-16.947 16.078-8.484-1.005-19.247-2.081-25.69 3.16-6.017 6.313-7.279 12.696-9.685 20.715-14.012-3.276-25.77 1.842-33.904 9.877-8.032 8.15-14.35 20.016-16.082 32.65 5.926 2.628 12.109 4.214 18.139 5.727 12.69-15.498 32.27-33.513 50.66-36.851 12.995-13.444 28.669-18.08 41.183-19.891a60.105 60.105 0 0 1 11.764-8.4c-6.632-11.786-12.405-18.622-19.313-23.086zm-232.011 18.882c-1.967 12.934-7.997 24.573-.64 46.305 32.36 70.655 41.042 23.73 93.735 22.953-38.944-18.938-66.126-45.737-93.095-69.258zm267.765 17.102c-4.87.972-9.343 3.536-13.062 6.28 9.197 12.249 16.987 27.313 23.28 43.81 7.916-2.052 14.75-4.612 21.103-7.506-6.473-26.762-18.951-37.976-31.32-42.584zm-29.935 13.906c-7.676 1.509-15.588 4.36-22.774 10.35 8.367 8.844 20.976 24.773 26.053 43.283 7.632-1.268 15.91-3.698 21.006-8.576-6.608-17.858-15.058-33.73-24.285-45.057zm-38.139 19.668c-14.313 5.357-25.257 14.981-34.674 25.938l19.383 26.324c13.696-1.49 26.639-6.254 39.39-13.299-4.69-15.098-18.62-32.912-24.447-38.607zm108.848 24.365c-6.679 3.099-13.973 5.985-22.237 8.375 6.323 10.32 11.618 21.138 15.602 32.543 7.703-3.07 14.902-6.372 21.264-10.082-3.964-11.28-8.68-22.055-14.63-30.836zM164.687 408.39l49.638 43.377c11.274-13.516 27.044-23.94 42.492-33.942l-22.02-25.32c-24.334-8.01-52.756 2.355-70.11 15.885zM391.9 394.153c-6.866 5.056-14.143 7.727-21.795 9.377 5.371 9.31 10.375 19.502 14.354 29.755 7.946-2.139 15.451-4.432 22.344-7.775-3.648-10.897-8.68-21.303-14.903-31.357zm-39.88 14.105c-11.759 6.313-24.191 11.162-37.42 13.545l13.316 27.447c14.663-2.177 28.099-3.684 39.666-9.746-4.195-10.706-9.777-21.706-15.563-31.246zm98.017 17.156c-6.627 3.604-13.647 6.703-20.846 9.534 2.83 7.167 5.28 14.119 7.21 20.757 10.397-1.435 20.263-5.912 18.179-13.869-1.423-5.296-2.923-10.83-4.543-16.422zM268.82 431.54c-16.062 10.564-31.09 20.975-40.728 32.256l1.392 1.217c16.648 14.548 36.256 20.475 44.95 9.13 8.522-11.12 10.536-24.116-5.614-42.603zm144.01 10.957c-7.166 3.334-14.4 5.634-21.465 7.58 3.051 6.991 5.842 13.849 8.244 20.48 9.2-.457 17.732-4.025 19.33-10.442-1.622-5.49-3.688-11.409-6.109-17.618zm-38.437 13.69c-12.724 6.396-25.866 8.467-38.184 10.154l6 12.367c10.038 10.705 32.656 11.336 42.21 2.944-2.654-7.907-6.1-16.516-10.026-25.465z</PathGeometry>
        <PathGeometry x:Key="SVG.Feet">m 36.826691,215.3613 c 112.415639,0 126.878489,-0.65226 126.878489,-0.65226 1.33254,-20.19714 -2.72345,-37.05559 -17.24512,-43.27764 2.79614,-4.54187 3.85689,-6.55073 13.9581,-12.49004 -7.53355,-23.42234 -2.55771,-41.78978 1.3148,-68.486657 C 143.38211,79.712617 115.41881,66.432236 92.705814,69.582584 89.742492,90.934756 88.278246,116.93902 97.520113,149.586 c -4.707276,3.74476 -6.380753,4.53954 -9.66505,12.3996 11.45176,1.30756 13.356677,5.56724 15.073497,8.06046 -17.049524,7.67307 -71.303811,23.87981 -66.101869,45.31524 z</PathGeometry>
        <PathGeometry x:Key="SVG.Ring">M12,10L8,4.4L9.6,2H14.4L16,4.4L12,10M15.5,6.8L14.3,8.5C16.5,9.4 18,11.5 18,14A6,6 0 0,1 12,20A6,6 0 0,1 6,14C6,11.5 7.5,9.4 9.7,8.5L8.5,6.8C5.8,8.1 4,10.8 4,14A8,8 0 0,0 12,22A8,8 0 0,0 20,14C20,10.8 18.2,8.1 15.5,6.8Z</PathGeometry>
        <PathGeometry x:Key="SVG.Earring">M254.5,457.6c2-13.7,3.3-30.8,3.4-42.7c45-5,80.2-42.7,80.2-89.1c0-49.7-40.3-90.1-90.1-90.1c-49.8,0-90.1,40.4-90.1,90.1c0,46.5,35.2,84.1,80.2,89.1c0.2,11.9,1.4,29,3.4,42.7C113.1,461.1,10,566,10,695.2c0,131.5,106.6,238.1,238,238.1c131.5,0,238.1-106.6,238.1-238.1C486.1,566,383,461,254.5,457.6z M223.8,283.8c-24.8,10.8-31.1,51.3-39.9,31.2c-8.8-20.2,4.2-45.3,28.9-56.2c24.9-10.9,52.2-3.4,61,16.7C282.6,295.6,248.5,272.9,223.8,283.8z M248,743.2c-70.3,0-127.2-57-127.2-127.3c0-70.3,57-127.3,127.2-127.3c70.3,0,127.2,57,127.2,127.3C375.2,686.2,318.3,743.2,248,743.2z</PathGeometry>
        <PathGeometry x:Key="SVG.Belt">M 399.94922 0 C 395.373 6.8847118 361.29296 43.34057 275.25391 39.583984 C 275.32337 53.978126 271.77604 69.462135 260.22656 84.462891 C 365.43493 82.151105 408.5901 53.963662 419.61914 43.578125 C 424.82529 28.21752 411.77169 3.3366425 399.94922 0 z M 20.847656 0.49023438 C 9.02526 3.8268769 -4.0283456 28.707755 1.1777344 44.068359 C 12.206717 54.453896 55.362518 82.641339 160.57031 84.953125 C 149.02088 69.952369 145.47156 54.46836 145.54102 40.074219 C 59.502467 43.830805 25.42387 7.3749462 20.847656 0.49023438 z M 199.56445 14.935547 C 187.1195 14.952871 167.6544 29.62426 157.04883 23.03125 C 142.99776 55.543124 173.29752 105.41799 210.69336 114.37305 C 248.08921 105.41799 278.38701 55.543124 264.33594 23.03125 C 248.90964 32.621083 214.74116 -2.7756909 210.69336 27.369141 C 209.42842 17.948881 205.22125 14.927672 199.56445 14.935547 z</PathGeometry>
        <PathGeometry x:Key="SVG.Circlet">M221.704,168.598c-2.255-14.414-7.951-28.365-16.567-40.669c1.004-1.992,1.68-4.149,1.979-6.379
            c0.717-5.341-0.69-10.642-3.961-14.924c-3.27-4.283-8.013-7.036-13.354-7.753c-1.57-0.21-3.17-0.234-4.73-0.075
            c-0.111-13.294-10.008-24.865-23.56-26.684c-1.201-0.161-2.423-0.243-3.629-0.243c-4.396,0-8.648,1.096-12.431,3.063
            c-2.187-17.12-16.849-30.396-34.554-30.396c-17.705,0-32.367,13.276-34.553,30.396c-4.819-2.508-10.473-3.57-16.061-2.82
            c-13.551,1.818-23.447,13.388-23.559,26.684c-1.559-0.16-3.158-0.134-4.731,0.075c-11.024,1.479-18.792,11.651-17.314,22.677
            c0.299,2.229,0.975,4.387,1.979,6.38c-8.616,12.304-14.312,26.255-16.566,40.668c-0.515,3.289,1.201,6.523,4.212,7.943
            c1.024,0.482,2.115,0.716,3.195,0.716c2.096,0,4.154-0.879,5.612-2.522c22.334-25.17,58.89-40.197,97.787-40.197
            c38.897,0,75.454,15.027,97.787,40.197c2.21,2.49,5.798,3.226,8.808,1.807C220.503,175.122,222.219,171.887,221.704,168.598z
            M153.105,99.042c0-3.009,2.447-5.456,5.455-5.456s5.455,2.447,5.455,5.456c0,3.008-2.447,5.455-5.455,5.455
            S153.105,102.05,153.105,99.042z M110.897,91.724c-6.811,0-12.352-5.541-12.352-12.352s5.541-12.352,12.352-12.352
            c6.812,0,12.353,5.541,12.353,12.352S117.708,91.724,110.897,91.724z M58.438,99.042c0-3.009,2.447-5.456,5.456-5.456
            c3.008,0,5.455,2.447,5.455,5.456c0,3.008-2.447,5.455-5.455,5.455C60.885,104.497,58.438,102.05,58.438,99.042z</PathGeometry>
        <PathGeometry x:Key="SVG.Necklace">m 90.32933,101.13555 c 6.382122,12.55346 9.578521,13.93743 15.64654,14.45876 6.67453,-0.29961 11.06542,-1.80507 16.1129,-14.68116 0.2702,-1.144186 2.0611,-0.25479 1.9216,0.30068 -4.30807,15.81671 -10.96457,17.07311 -17.74347,17.57065 -6.778898,-0.49754 -13.435399,-1.75394 -17.743464,-17.57065 -0.224759,-0.79526 1.618419,-0.93398 1.805894,-0.0783 z m 15.93757,17.64893 -6.401679,11.08769 v 5.69681 5.69733 l 6.401679,11.0877 6.40167,-11.0877 v -5.69733 -5.69681 z m 0.18862,5.82083 3.84317,7.30912 v 7.51117 l -3.84317,7.30911 z</PathGeometry>

        <!--Converters-->
        <converters:BoolToOpacityConverter x:Key="Converters.BoolToOpacity"/>
        <converters:BoolToOpacityInverseConverter x:Key="Converters.BoolToOpacityInverse"/>
        <converters:BoolToVisibleCollapsedConverter x:Key="Converters.BoolToVisibleCollapsed" />
        <converters:BoolToVisibleHidden x:Key="Converters.BoolToVisibleHidden" />
        <converters:RollToStringConverter x:Key="Converters.RollToString"/>
        <converters:WinningToColorConverter x:Key="Converters.WinningToColor"/>
        <converters:IconConverter x:Key="Converters.IconNameToPath"/>
        <converters:ClassImageConverter x:Key="Converters.ClassToImage"/>
        <converters:ChatChannelToColor x:Key="Converters.ChatChannelToColor"/>
        <converters:ChatChannelToName x:Key="Converters.ChatChannelToName"/>
        <converters:MessageTypeToCursor x:Key="Converters.MessageTypeToCursor"/>
        <converters:MentionToColorConverter x:Key="Converters.MentionToColor"/>
        <converters:SentReceivedToAngleConverter x:Key="Converters.WhisperDirectionToAngle"/>
        <converters:HPbarColorConverter x:Key="Converters.DebuffStatusToHpColor"/>
        <converters:ContractedToColWidthConverter x:Key="Converters.MessageContractedToColumnWidth"/>
        <converters:RowsToHeightConverter x:Key="Converters.RowsToHeight"/>
        <converters:BoolToCooldowWindowTemplateConverter x:Key="Converters.BoolToCooldowWindowTemplate"/>
        <converters:PieceToPathConverter x:Key="Converters.PieceToPath"/>
        <converters:GearLevelToFactorConverter x:Key="Converters.GearLevelToFactor"/>
        <converters:GearLevelToColorConverter x:Key="Converters.GearLevelToColor"/>

        <!--AbnormalityIndicator resources-->
        <converters:AbnormalityStrokeConverter x:Key="Converters.AbnormalityTypeToStrokeColor"/>
        <converters:DurationLabelConverter x:Key="Converters.DurationToTimeFormat"/>
        <converters:StacksToVisibilityConverter x:Key="Converters.StacksToLabelVisibility"/>
        <converters:DurationToVisibilityConverter x:Key="Converters.DurationToLabelVisibility"/>
        <converters:SizeToStackLabelSizeConverter x:Key="Converters.MainSizeToStackLabelSize"/>
        <converters:SizeToDurationLabelSizeConverter x:Key="Converters.MainSizeToDurationLabelSize"/>
        <converters:SizeToDurationLabelMarginConverter x:Key="Converters.MainSizeToDurationLabelMargin"/>

        <!--BossGage resources-->
        <converters:EntityIdToNameConverter x:Key="Converters.EntityIdToName"/>
        <converters:AggroTypeToFillConverter x:Key="Converters.AggroTypeToFill"/>
        <converters:BossHPbarColorConverter x:Key="Converters.EnrageToHpColor"/>
        <converters:DragonIdToColorConverter x:Key="Converters.DragonIdToColor"/>
        <converters:HHphaseToEnemyWindowTemplate x:Key="Converters.HarrowholdPhaseToLayout"/>

        <!--Party/raid member resources-->
        <converters:LaurelImageConverter x:Key="Converters.LaurelToImage"/>
        <converters:ClassToFillConverter x:Key="Converters.ClassToFill"/>
        <converters:ReadyToOpacityConverter x:Key="readyToOpacityConv"/>
        <converters:ReadyToIconConverter x:Key="Converters.ReadyToIcon"/>
        <converters:ReadyToColorConverter x:Key="Converters.ReadyToColor"/>
        <converters:GroupSizeToTemplateConverter x:Key="Converters.GroupSizeToTemplate"/>

        <DataTemplate x:Key="PartyAbnormality">
            <controls:AbnormalityIndicator Size="28"/>
        </DataTemplate>
        <DataTemplate x:Key="RaidAbnormality">
            <controls:AbnormalityIndicator Size="24"/>
        </DataTemplate>
        <DataTemplate x:Key="BossAbnormality">
            <controls:AbnormalityIndicator Size="30" Margin="2"/>
        </DataTemplate>
        <converters:LocationToMapConverter x:Key="Converters.LocationToMap"/>
        <converters:LocationToMarkerPositionConverter x:Key="Converters.LocationToMarkerPosition"/>
        <converters:LocationToStretchConverter x:Key="Converters.LocationToStretch"/>
        <converters:ShieldStatusColorConverter x:Key="Converters.ShieldStatusColor"/>
        <converters:ShieldStatusToVisibilityConverter x:Key="Converters.ShieldStatusToVisibility"/>
        <converters:FactorToAngleConverter x:Key="Converters.FactorToAngle"/>
        <converters:ValueToFactorConverter x:Key="Converters.ValueToFactor"/>
        <converters:BoolToBrushConverter x:Key="Converters.BoolToBrush"/>
        <converters:DungeonIdToImageConverter x:Key="Converters.DungeonIdToImage"/>
        <converters:DungeonIdToNameConverter x:Key="Converters.DungeonIdToName"/>
        <converters:DungeonIdToStarsConverter x:Key="Converters.DungeonIdToStars"/>
        <converters:DungeonIdToTierColorConverter x:Key="Converters.DungeonIdToTierColor"/>
        <converters:StringToFillConverter x:Key="Converters.StringToFill"/>
        <!--Scrollbar Thumbs-->
        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto"
                                       Height="Auto" Fill="Transparent" />
                            <Border x:Name="Rectangle1" CornerRadius="4" HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch" Width="Auto" Height="Auto" Margin="0"
                                    Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                <Setter TargetName="Rectangle1" Property="Height" Value="6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ScrollBars-->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="#2fff" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="8" />
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>

                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}"
                                           Style="{StaticResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0"
                                                  Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0"
                                                  Focusable="false" />
                                </Track.DecreaseRepeatButton>
                                <Track.LayoutTransform>
                                    <RotateTransform Angle="180"/>
                                </Track.LayoutTransform>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="0" SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070" />
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeThickness="1" StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121" />
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#11FFFFFF"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#00ACACAC"/>
        <Style x:Key="ChatTabControlStyle" TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" 
                              KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="headerPanel" Background="#1000" Grid.Column="0" IsItemsHost="true" Margin="0,0,0,0" Grid.Row="0" 
                                      KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" HorizontalAlignment="Stretch"/>
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                    Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" 
                                    KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" 
                                                  Margin="{TemplateBinding Padding}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" 
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="SimpleTemplate" DataType="data:MessagePiece">
            <controls:OutlinedTextBlock Fill="{Binding Color}"
                                        Text="{Binding Text}" 
                                        Cursor="{Binding Type, Converter={StaticResource Converters.MessageTypeToCursor}}"
                                        Stroke="#9000"
                                        StrokeThickness="3"
                                        FontSize="{Binding Size}"
                                        FontFamily="{StaticResource Frutiger}"
                                        TextWrapping="WrapWithOverflow"
                                        FontWeight="Normal"
                                        Opacity="1"
                                        Width="Auto"
                                        HorizontalAlignment="Stretch"
                                        TextTrimming="None"
                                        Margin="{Binding Spaces}"
                                        />
        </DataTemplate>
        <DataTemplate x:Key="MoneyTemplate">
            <controls:MoneyMessagePiece />
        </DataTemplate>
        <templateselectors:MessagePieceDataTemplateSelector x:Key="PieceTemplateSelector"
                                                   SimpleTemplate="{StaticResource SimpleTemplate}"
                                                   MoneyTemplate="{StaticResource MoneyTemplate}"
                                                   QuestTemplate="{StaticResource SimpleTemplate}"
                                                   PointOfInterestTemplate="{StaticResource SimpleTemplate}"
                                                   ItemTemplate="{StaticResource SimpleTemplate}"
                                                   />


        <DataTemplate x:Key="MessageHeaderTemplate">
            <controls:ChatMessageHeader />
        </DataTemplate>
        <DataTemplate x:Key="MessageBodyTemplate">
            <controls:MessagePieceControl  />
        </DataTemplate>
        <DataTemplate x:Key="DefaultBody">
            <chatcontrols:DefaultMessageBody />
        </DataTemplate>
        <DataTemplate x:Key="BrokerOfferBody">
            <chatcontrols:BrokerOfferBody />
        </DataTemplate>
        <DataTemplate x:Key="ApplyBody">
            <chatcontrols:ApplyBody/>
        </DataTemplate>

        <templateselectors:MessageBodyDataTemplateSelector x:Key="BodyTemplateSelector"
                                                           BrokerBody="{StaticResource BrokerOfferBody}"
                                                           DefaultBody="{StaticResource DefaultBody}" 
                                                           ApplyBody="{StaticResource ApplyBody}"/>

        <!--Channel label templates-->
        <DataTemplate x:Key="WhisperChannelLabelTemplate">
            <Grid Height="12" Width="12" VerticalAlignment="Top" UseLayoutRounding="True">
                <Path Data="M12 8V4l8 8-8 8v-4H4V8z" Fill="{Binding Channel, Converter={StaticResource Converters.ChatChannelToColor}}" Opacity=".7" 
                      Stretch="Uniform" VerticalAlignment="Center">
                    <Path.LayoutTransform>
                        <TransformGroup>
                            <ScaleTransform CenterX="1" ScaleX="{Binding Channel, Converter={StaticResource Converters.WhisperDirectionToAngle}}"/>
                        </TransformGroup>
                    </Path.LayoutTransform>
                </Path>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="MegaphoneChannelLabelTemplate">
            <Grid Height="12" Width="12" VerticalAlignment="Top" UseLayoutRounding="True">
                <Path Data="M81.114,30.146C73.196,11.725,60.456-2.306,54.009,0.316C43.062,4.765,60.53,26.133,6.774,47.984                                   c-4.643,1.887-5.82,9.441-3.877,13.957c1.939,4.515,8.291,9.01,12.936,7.123c0.803-0.326,3.754-1.275,3.754-1.275                                   c3.316,4.45,6.787,1.811,8.018,4.639c1.479,3.398,4.697,10.785,5.789,13.298c1.096,2.511,3.576,4.837,5.377,4.153                                   c1.795-0.684,7.91-3.011,10.25-3.901c2.338-0.89,2.896-2.974,2.182-4.619c-0.771-1.772-3.932-2.292-4.832-4.36                                   c-0.902-2.068-3.848-8.696-4.695-10.785c-1.152-2.841,1.295-5.152,4.85-5.522c24.467-2.55,29.041,12.561,37.371,9.173                                   C90.343,67.243,89.03,48.568,81.114,30.146z M78.358,60.03c-1.432,0.582-11.061-7.013-17.215-21.334                                   c-6.152-14.318-5.379-27.408-3.949-27.989c1.43-0.582,10.822,8.58,16.975,22.898C80.321,47.923,79.79,59.448,78.358,60.03z"
                                  Fill="#ff2b2b" Opacity=".7" Stretch="Uniform" VerticalAlignment="Center"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="DefaultChannelLabelTemplate">
            <TextBlock  Foreground="{Binding Channel, Converter={StaticResource Converters.ChatChannelToColor}}" 
                        Opacity=".5" 
                        FontWeight="DemiBold" 
                        FontSize="11"
                        FontFamily="{StaticResource Frutiger}"
                        HorizontalAlignment="Right" 
                        VerticalAlignment="Top"
                        TextAlignment="Center"
                        Visibility="Visible"
                        TextTrimming="CharacterEllipsis"
                        MinWidth="33"
                        Margin="0,-1,0,0"
                        Text="{Binding Channel, Converter={StaticResource Converters.ChatChannelToName}}"
                                />
        </DataTemplate>
        <DataTemplate x:Key="EnchantChannelLabelTemplate">
            <Grid>
                <TextBlock  Foreground="{Binding Channel, Converter={StaticResource Converters.ChatChannelToColor}}" 
                        Opacity=".8" 
                        FontWeight="DemiBold" 
                        FontSize="11"
                        FontFamily="{StaticResource Frutiger}"
                        HorizontalAlignment="Right" 
                        VerticalAlignment="Top"
                        TextAlignment="Center"
                        Visibility="Visible"
                        TextTrimming="CharacterEllipsis"
                        MinWidth="33"
                        Margin="0,-1,0,0"
                        Text="{Binding Channel, Converter={StaticResource Converters.ChatChannelToName}}"
                                />
                <Border Width="Auto"
                     Height="Auto"
                        CornerRadius="5"
                     Margin="4,-2,2,3"
                     Opacity=".3"
                     Background="{Binding Channel, Converter={StaticResource Converters.ChatChannelToColor}}"

                     />
            </Grid>
        </DataTemplate>

        <templateselectors:ChannelLabelDataTemplateSelector x:Key="ChannelLabelTemplateSelector"
                                             NormalChannelDataTemplate="{StaticResource DefaultChannelLabelTemplate}"
                                             WhisperChannelDataTemplate="{StaticResource WhisperChannelLabelTemplate}" 
                                             MegaphoneChannelDataTemplate="{StaticResource MegaphoneChannelLabelTemplate}"
                                             EnchantChannelDataTemplate="{StaticResource EnchantChannelLabelTemplate}"/>
        <!--Author label templates-->
        <DataTemplate x:Key="DefaultAuthorTemplate">
            <controls:OutlinedTextBlock  Margin="3,0,3,0" 
                        Fill="{Binding Channel, Converter={StaticResource Converters.ChatChannelToColor}}" 
                        FontSize="14"
                        HorizontalAlignment="Stretch"
                        TextAlignment="Left"
                        FontWeight="SemiBold"
                        FontFamily="{StaticResource Frutiger}"
                        Width="Auto"
                        MinWidth="0"
                        UseLayoutRounding="True"
                        Opacity=".9"
                        Text="{Binding Author}"
                        Cursor="Hand"
                        TextTrimming="CharacterEllipsis"
                        Stroke="#9000"
                        StrokeThickness="3"                       
                        />

        </DataTemplate>
        <DataTemplate x:Key="SystemAuthorTemplate">
            <Ellipse Width="10"
                     Height="10"
                     Margin="2,3,2,4"
                     Opacity=".5"
                     Fill="{Binding Channel, Converter={StaticResource Converters.ChatChannelToColor}}"
                     />
        </DataTemplate>
        <templateselectors:AuthorLabelTemplateSelector x:Key="AuthorTemplateSelector"
                                        DefaultAuthorTemplate="{StaticResource DefaultAuthorTemplate}"
                                        SystemAuthorTemplate="{StaticResource SystemAuthorTemplate}"
                                        />
        <DataTemplate x:Key="LfgTemplate">
            <chatcontrols:LFGcontrol Margin="1"/>
        </DataTemplate>

        <!--Boss template-->
        <DataTemplate x:Key="BossDataTemplate">
            <local:BossGage/>
        </DataTemplate>
        <!--Mob template-->
        <DataTemplate x:Key="MobDataTemplate">
            <controls:SmallMobControl/>
        </DataTemplate>
        <templateselectors:EnemyTemplateSelector x:Key="EnemyTemplateSelector" 
                                                 BossDataTemplate="{StaticResource BossDataTemplate}"
                                                 MobDataTemplate="{StaticResource MobDataTemplate}"/>

        <DataTemplate x:Key="DefaultEnemyWindowLayout">
            <controls:DefaultEnemyWindowLayout/>
        </DataTemplate>
        <DataTemplate x:Key="Phase1EnemyWindowLayout">
            <controls:Phase1BossControl />
        </DataTemplate>
        <DataTemplate x:Key="Phase2EnemyWindowLayout">
            <controls:Phase2BossControl />
        </DataTemplate>
        <DataTemplate x:Key="Phase2BEnemyWindowLayout">
            <controls:Phase2BallistaBossControl />
        </DataTemplate>
        <DataTemplate x:Key="Phase3EnemyWindowLayout">
            <controls:Phase3BossControl />
        </DataTemplate>
        <DataTemplate x:Key="Phase4EnemyWindowLayout">
            <controls:Phase4BossControl />
        </DataTemplate>
        <Style TargetType="{x:Type Grid}" x:Key="Style.DragonSelectionGrid">
            <Setter Property="Opacity" Value=".45"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                    <Setter Property="Opacity" Value="1" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="DragonIndicator">
            <controls:DragonControl />
        </DataTemplate>

        <DataTemplate x:Key="party">
            <controls:PartyMember />
        </DataTemplate>
        <DataTemplate x:Key="raid" >
            <controls:RaidMember/>
        </DataTemplate>

        <DataTemplate x:Key="FixedCooldownTemplate">
            <controls:FixedSkillContainers/>
        </DataTemplate>
        <DataTemplate x:Key="NormalCooldownTemplate">
            <controls:NormalSkillContainer/>
        </DataTemplate>
        <DataTemplate x:Key="TabSettingsTemplate">
            <chatcontrols:TabSettingControl/>
        </DataTemplate>
        <Style x:Key="FocusVisual3">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" Margin="2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="ComboBox.Static.Background" Color="#1fff"/>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#fff"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Background" Color="#2fff"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#2fff"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#2fff"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" Color="#2fff"/>

        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#2fff"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#fff"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Background" Color="#2fff"/>

        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#2fff"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#2fff"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Background" Color="#2fff"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#2fff"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#9fff"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="{StaticResource ComboBox.Static.Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{StaticResource ComboBox.Static.Border}">
                            <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                                <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Fill="{StaticResource ComboBox.Static.Glyph}" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" Style="{StaticResource Styles.DefaultBorder}"> 
                            <ScrollViewer x:Name="DropDownScrollViewer" VerticalScrollBarVisibility="Hidden">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="SimpleChatChannelTemplate" DataType="data:ChatChannelOnOff">
            <Grid ToolTip="{Binding Channel}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Ellipse Width="12" Height="12" Margin="4,0" VerticalAlignment="Center"
                         Fill="{Binding Channel, Converter={StaticResource Converters.ChatChannelToColor}}"/>
                <TextBlock Grid.Column="1" Style="{StaticResource Styles.DefaultText}" VerticalAlignment="Center"
                           Foreground="#8fff" Text="{Binding Channel, Converter={StaticResource Converters.ChatChannelToName}}"></TextBlock>
            </Grid>
        </DataTemplate>
    </Application.Resources>
</Application>
